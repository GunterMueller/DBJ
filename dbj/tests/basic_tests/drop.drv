#!/bin/sh
#*************************************************************************
#*                                                                       *
#* (C) 2004-2005                                                         *
#* Lehrstuhl fuer Datenbanken und Informationssysteme                    *
#* Friedrich-Schiller-Universitaet Jena                                  *
#* Ernst-Abbe-Platz 1-2                                                  *
#* 07745 Jena                                                            *
#*                                                                       *
#*************************************************************************

echo
echo "#####################################################################"
echo " System starten"
echo "#####################################################################"
echo
dbjstart

echo
echo "#####################################################################"
echo " Tabelle anlegen"
echo "#####################################################################"
echo
cat > stmt.sql <<EOF
CREATE TABLE angest (
   persNr    INTEGER NOT NULL,
   vorname   VARCHAR(10),
   nachname  VARCHAR(20) NOT NULL,
   gehalt    INTEGER NOT NULL,
   adresse   VARCHAR(20),

   PRIMARY KEY(persNr)
);
CREATE INDEX angest_nachname ON angest(nachname);


CREATE TABLE project (
   projNr        INTEGER NOT NULL,
   name          VARCHAR(20) NOT NULL,
   prioritaet    INTEGER,
   beschreibung  VARCHAR(1000),

   PRIMARY KEY(projNr)
);
CREATE INDEX project_prio ON project(prioritaet);

COMMIT WORK;

CREATE TABLE x ( a INT );
ROLLBACK WORK;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

echo
echo "#####################################################################"
echo " Index loeschen"
echo "#####################################################################"
echo
cat > stmt.sql <<EOF
DROP INDEX project_prio;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
ROLLBACK WORK;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
DROP INDEX project_prio;
COMMIT;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

echo
echo "#####################################################################"
echo " Tabelle loeschen"
echo "#####################################################################"
echo
cat > stmt.sql <<EOF
DROP TABLE project;
SELECT table_name, table_id, column_count, tuple_count FROM systables;
SELECT * FROM syscolumns;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
ROLLBACK;
SELECT table_name, table_id, column_count, tuple_count FROM systables;
SELECT * FROM syscolumns;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
DROP TABLE project;
COMMIT;
SELECT table_name, table_id, column_count, tuple_count FROM systables;
SELECT * FROM syscolumns;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

cat > stmt.sql <<EOF
DROP TABLE angest;
SELECT table_name, table_id, column_count, tuple_count FROM systables;
SELECT * FROM syscolumns;
SELECT table_id, index_name, index_id, index_type, column_id, is_unique FROM sysindexes;
COMMIT;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

echo
echo "#####################################################################"
echo " Tabelle in gleicher Transaktion anlegen und loeschen"
echo "#####################################################################"
echo
cat > stmt.sql <<EOF
CREATE TABLE a ( a int );
DELETE FROM a;
DROP TABLE a;
COMMIT;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

cat > stmt.sql <<EOF
CREATE TABLE a ( a int );
DELETE FROM a;
DROP TABLE a;
ROLLBACK WORK;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

echo
echo "#####################################################################"
echo " Tabelle in gleicher Transaktion mehrfach anlegen und loeschen"
echo "#####################################################################"
echo
cat > stmt.sql <<EOF
CREATE TABLE a ( a int );
DROP TABLE a;
CREATE TABLE a ( a int );
INSERT INTO a VALUES (1);
DROP TABLE a;
CREATE TABLE a ( a int );
DROP TABLE a;
COMMIT;
EOF
dbj -f stmt.sql
ls -s Seg*.dbj | sed -e 's/^ *//'

echo
echo "#####################################################################"
echo " System stoppen"
echo "#####################################################################"
echo
dbjstop
rm Seg*.dbj

rm stmt.sql

exit 0
